# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = xepor
description = Xepor, a web routing framework for reverse engineers and security researchers.
author = ttimasdf
author_email = opensource@rabit.pw
license = Apache-2.0
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/xepor/xepor
# Add here related links, for example:
project_urls =
    Documentation = https://xepor.readthedocs.io/en/latest/index.html
    Source = https://github.com/xepor/xepor
    Changelog = https://xepor.readthedocs.io/en/latest/changelog.html
    Tracker = https://github.com/xepor/xepor/issues
    Download = https://pypi.org/project/xepor/#files
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    License :: OSI Approved :: Apache Software License
    Development Status :: 4 - Beta
    Operating System :: MacOS
    Operating System :: POSIX
    Operating System :: Microsoft :: Windows
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Security
    Topic :: Internet :: WWW/HTTP
    Topic :: Internet :: Proxy Servers
    Topic :: System :: Networking :: Monitoring
    Topic :: Software Development :: Testing
    Typing :: Typed


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    mitmproxy>=7.0.0,<12.0.0
    parse>=1.19.0,<2.0.0


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install xepor[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    tox

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = xepor.module:function
# For example:
# console_scripts =
#     fibonacci = xepor.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov xepor --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.1.5
package = xepor
extensions =
    gitlab
    markdown
